{"ast":null,"code":"import { StorageManagerActionTypes as s } from \"./types.mjs\";\nconst e = ({\n    files: e,\n    status: t,\n    getFileErrorMessage: p\n  }) => ({\n    type: s.ADD_FILES,\n    files: e,\n    status: t,\n    getFileErrorMessage: p\n  }),\n  t = () => ({\n    type: s.CLEAR_FILES\n  }),\n  p = () => ({\n    type: s.QUEUE_FILES\n  }),\n  E = ({\n    id: e,\n    uploadTask: t\n  }) => ({\n    type: s.SET_STATUS_UPLOADING,\n    id: e,\n    uploadTask: t\n  }),\n  i = ({\n    id: e,\n    progress: t\n  }) => ({\n    type: s.SET_UPLOAD_PROGRESS,\n    id: e,\n    progress: t\n  }),\n  r = ({\n    id: e,\n    status: t\n  }) => ({\n    type: s.SET_STATUS,\n    id: e,\n    status: t\n  }),\n  S = ({\n    id: e\n  }) => ({\n    type: s.REMOVE_UPLOAD,\n    id: e\n  });\nexport { e as addFilesAction, t as clearFilesAction, p as queueFilesAction, S as removeUploadAction, i as setUploadProgressAction, r as setUploadStatusAction, E as setUploadingFileAction };","map":{"version":3,"names":["StorageManagerActionTypes","s","e","files","status","t","getFileErrorMessage","p","type","ADD_FILES","CLEAR_FILES","QUEUE_FILES","E","id","uploadTask","SET_STATUS_UPLOADING","i","progress","SET_UPLOAD_PROGRESS","r","SET_STATUS","S","REMOVE_UPLOAD","addFilesAction","clearFilesAction","queueFilesAction","removeUploadAction","setUploadProgressAction","setUploadStatusAction","setUploadingFileAction"],"sources":["C:/Users/Chris Chan/softone/node_modules/@aws-amplify/ui-react-storage/dist/esm/components/StorageManager/hooks/useStorageManager/actions.mjs"],"sourcesContent":["import{StorageManagerActionTypes as s}from\"./types.mjs\";const e=({files:e,status:t,getFileErrorMessage:p})=>({type:s.ADD_FILES,files:e,status:t,getFileErrorMessage:p}),t=()=>({type:s.CLEAR_FILES}),p=()=>({type:s.QUEUE_FILES}),E=({id:e,uploadTask:t})=>({type:s.SET_STATUS_UPLOADING,id:e,uploadTask:t}),i=({id:e,progress:t})=>({type:s.SET_UPLOAD_PROGRESS,id:e,progress:t}),r=({id:e,status:t})=>({type:s.SET_STATUS,id:e,status:t}),S=({id:e})=>({type:s.REMOVE_UPLOAD,id:e});export{e as addFilesAction,t as clearFilesAction,p as queueFilesAction,S as removeUploadAction,i as setUploadProgressAction,r as setUploadStatusAction,E as setUploadingFileAction};\n"],"mappings":"AAAA,SAAOA,yBAAyB,IAAIC,CAAC,QAAK,aAAa;AAAC,MAAMC,CAAC,GAACA,CAAC;IAACC,KAAK,EAACD,CAAC;IAACE,MAAM,EAACC,CAAC;IAACC,mBAAmB,EAACC;EAAC,CAAC,MAAI;IAACC,IAAI,EAACP,CAAC,CAACQ,SAAS;IAACN,KAAK,EAACD,CAAC;IAACE,MAAM,EAACC,CAAC;IAACC,mBAAmB,EAACC;EAAC,CAAC,CAAC;EAACF,CAAC,GAACA,CAAA,MAAK;IAACG,IAAI,EAACP,CAAC,CAACS;EAAW,CAAC,CAAC;EAACH,CAAC,GAACA,CAAA,MAAK;IAACC,IAAI,EAACP,CAAC,CAACU;EAAW,CAAC,CAAC;EAACC,CAAC,GAACA,CAAC;IAACC,EAAE,EAACX,CAAC;IAACY,UAAU,EAACT;EAAC,CAAC,MAAI;IAACG,IAAI,EAACP,CAAC,CAACc,oBAAoB;IAACF,EAAE,EAACX,CAAC;IAACY,UAAU,EAACT;EAAC,CAAC,CAAC;EAACW,CAAC,GAACA,CAAC;IAACH,EAAE,EAACX,CAAC;IAACe,QAAQ,EAACZ;EAAC,CAAC,MAAI;IAACG,IAAI,EAACP,CAAC,CAACiB,mBAAmB;IAACL,EAAE,EAACX,CAAC;IAACe,QAAQ,EAACZ;EAAC,CAAC,CAAC;EAACc,CAAC,GAACA,CAAC;IAACN,EAAE,EAACX,CAAC;IAACE,MAAM,EAACC;EAAC,CAAC,MAAI;IAACG,IAAI,EAACP,CAAC,CAACmB,UAAU;IAACP,EAAE,EAACX,CAAC;IAACE,MAAM,EAACC;EAAC,CAAC,CAAC;EAACgB,CAAC,GAACA,CAAC;IAACR,EAAE,EAACX;EAAC,CAAC,MAAI;IAACM,IAAI,EAACP,CAAC,CAACqB,aAAa;IAACT,EAAE,EAACX;EAAC,CAAC,CAAC;AAAC,SAAOA,CAAC,IAAIqB,cAAc,EAAClB,CAAC,IAAImB,gBAAgB,EAACjB,CAAC,IAAIkB,gBAAgB,EAACJ,CAAC,IAAIK,kBAAkB,EAACV,CAAC,IAAIW,uBAAuB,EAACR,CAAC,IAAIS,qBAAqB,EAAChB,CAAC,IAAIiB,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}